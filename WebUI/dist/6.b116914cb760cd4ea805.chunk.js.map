{"version":3,"sources":["webpack:///./src/app/payments/payments.module.ts","webpack:///./src/app/shared/models/audit-info.ts?feeb*","webpack:///./src/app/core/services/payment/payment-data.service.ts","webpack:///./src/app/payments/stop-payments/stop-payments-modal/stop-payments-modal.component.ts","webpack:///./src/app/payments/stop-payments/stop-payments.component.ts","webpack:///./src/app/shared/models/payments/payment-type.ts","webpack:///./src/app/payments/stop-payments-routing.ts","webpack:///./src/app/shared/models/payments/ach-stop-payment.model.ts","webpack:///./src/app/shared/models/payments/draft-stop-payment.model.ts","webpack:///./src/app/shared/models/payments/stop-payment.model.ts","webpack:///./src/app/payments/stop-payments/stop-payments-modal/stop-payments-modal.component.html","webpack:///./src/app/payments/stop-payments/stop-payments.component.html","webpack:///./src/app/payments/stop-payments/stop-payments.component.css"],"names":[],"mappings":"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","file":"6.b116914cb760cd4ea805.chunk.js","sourcesContent":["import { PaymentDataService } from './../core/services/payment/payment-data.service';\r\nimport { SharedModule } from './../shared/shared.module';\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { StopPaymentsComponent } from './stop-payments/stop-payments.component';\r\nimport { StopPaymentModalComponent } from \"./stop-payments/stop-payments-modal/stop-payments-modal.component\";\r\nimport { stopPaymentsRouting } from \"./stop-payments-routing\";\r\n\r\n@NgModule({\r\n    imports: [stopPaymentsRouting, SharedModule],\r\n    exports: [],\r\n    declarations: [StopPaymentsComponent, StopPaymentModalComponent],\r\n    providers: [PaymentDataService],\r\n    entryComponents: [StopPaymentModalComponent]\r\n})\r\nexport class PaymentsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/payments/payments.module.ts","export class AuditInfo {\r\n\r\n    CreatedBy: string;\r\n    UpdatedBy: string;\r\n    CreatedOn: string;\r\n    UpdatedOn: string;\r\n    DeletedOn: string;\r\n    DeletedBy: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/shared/models/audit-info.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, URLSearchParams, Headers } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { SettingsService } from '../settings.service';\r\nimport { StopPayment } from './../../../shared/models/payments/stop-payment.model';\r\nimport { Account } from '../../../shared/models/account.model';\r\nimport { GrowlerMediatorService } from '../mediators/growler-mediator.service';\r\n\r\n@Injectable()\r\nexport class PaymentDataService {\r\n\r\n    public serverUrl: string;\r\n\r\n    constructor(private http: Http, private settingService: SettingsService, private growler: GrowlerMediatorService) {\r\n        this.serverUrl = settingService.serviceFabricApi + 'payment/';\r\n    }\r\n\r\n    getStopPayment(customerId: number): Observable<StopPayment[]> {\r\n        return this.http.get(this.serverUrl + customerId, this.settingService.getDefaultHeaders())\r\n            .map((response: Response) => {\r\n                return response.json();\r\n            })\r\n            .catch((error: any) => {\r\n                this.growler.growlError(\"Error!\", \"Cannot retrieve customer payment.\");\r\n                return this.handleError(error);\r\n            });\r\n    }\r\n\r\n    updateStopPayment(stopPayment: StopPayment): Observable<boolean> {\r\n        return this.http.post(this.serverUrl, stopPayment, this.settingService.getDefaultHeaders())\r\n            .map((response: Response) => {\r\n                return response.status === 200;\r\n            })\r\n            .catch((error: any) => {\r\n                this.growler.growlError(\"Error!\", \"Cannot update stop payment record.\");\r\n                return this.handleError(error);\r\n            });\r\n    }\r\n\r\n    deleteStopPayment(stopPaymentId: number, stopPaymentTypeId: number): Observable<boolean> {\r\n        return this.http.delete(this.serverUrl + stopPaymentId + \"/\" + stopPaymentTypeId, this.settingService.getDefaultHeaders())\r\n            .map((response: Response) => {\r\n                return response.status === 200;\r\n            })\r\n            .catch((error: any) => {\r\n                this.growler.growlError(\"Error!\", \"Cannot delete stop payment record.\");\r\n                return this.handleError(error);\r\n            });\r\n    }\r\n\r\n    getFeeAmount(stopPaymentTypeId: number): Observable<number> {\r\n        return this.http.get(this.serverUrl + \"feeamount/\" + stopPaymentTypeId, this.settingService.getDefaultHeaders())\r\n            .map((response: Response) => {\r\n                return response.json();\r\n            })\r\n            .catch((error: any) => {\r\n                this.growler.growlError(\"Error!\", \"Cannot retrieve customer payment.\");\r\n                return this.handleError(error);\r\n            });\r\n    }\r\n\r\n    handleError(error: any) {\r\n        return Observable.throw(new Error(error.status));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/core/services/payment/payment-data.service.ts","import { NgForm } from '@angular/forms';\r\nimport { PaymentDataService } from './../../../core/services/payment/payment-data.service';\r\nimport { GrowlerMediatorService } from './../../../core/services/mediators/growler-mediator.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild, Output, Input } from '@angular/core';\r\nimport { DialogComponent, DialogService } from \"ng2-bootstrap-modal\";\r\nimport { StopPayment } from './../../../shared/models/payments/stop-payment.model';\r\nimport { DraftStopPayment } from './../../../shared/models/payments/draft-stop-payment.model';\r\nimport { ACHStopPayment } from './../../../shared/models/payments/ach-stop-payment.model';\r\nimport { PaymentType } from \"../../../shared/models/payments/payment-type\";\r\nimport { AuditInfo } from \"../../../shared/models/audit-info\";\r\nimport { Account } from '../../../shared/models/account.model';\r\nimport * as moment from 'moment';\r\n\r\nexport interface StopPaymentModel {\r\n    title: string;\r\n    message: string;\r\n    confirmText: string;\r\n    cancelText: string;\r\n    stopPayment: StopPayment;\r\n    customerId: number;\r\n    accounts: Account[];\r\n}\r\n\r\n@Component({\r\n    selector: 'ta-stop-payment',\r\n    template: require('./stop-payments-modal.component.html')\r\n})\r\n\r\nexport class StopPaymentModalComponent extends DialogComponent<StopPaymentModel, boolean> implements OnInit {\r\n    public stopPaymentType: PaymentType;\r\n    public isDraftVisible: boolean = false;\r\n    public isAchVisible: boolean = false;\r\n    public isFeeVisible: boolean = false;\r\n    public feeAmount: number;\r\n    public defaultDropDownValue: any;\r\n    title: string;\r\n    message: string;\r\n    confirmText: string;\r\n    cancelText: string;\r\n    public stopPayment: StopPayment;\r\n    private sub: any;\r\n    customerId: number;\r\n    accounts: Account[];\r\n    @ViewChild('stopPaymentModal') confirmForm: NgForm;\r\n\r\n    constructor(dialogService: DialogService,\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        public growler: GrowlerMediatorService,\r\n        private paymentDataService: PaymentDataService) {\r\n        super(dialogService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.stopPayment === undefined) {\r\n            this.initializeObjects();\r\n        } else {\r\n            if (this.stopPayment.ACHStopPayment == undefined) {\r\n                this.stopPayment.ACHStopPayment = new ACHStopPayment();\r\n            }\r\n            if (this.stopPayment.DraftStopPayment == undefined) {\r\n                this.stopPayment.DraftStopPayment = new DraftStopPayment();\r\n            }\r\n            this.displayPaymentTypeSubsection();\r\n            this.populateSelectedAccount();\r\n        }\r\n    }\r\n\r\n    public initializeObjects() {\r\n        this.stopPayment = new StopPayment();\r\n        this.stopPayment.CustomerId = this.customerId;\r\n        this.defaultDropDownValue = this.stopPayment.Account;\r\n        this.stopPayment.AuditInfo = new AuditInfo();\r\n        this.stopPayment.ACHStopPayment = new ACHStopPayment();\r\n        this.stopPayment.DraftStopPayment = new DraftStopPayment();\r\n\r\n    }\r\n\r\n    getAchStopPayment() {\r\n        return PaymentType.ACH;\r\n    }\r\n\r\n    getDraftStopPayment() {\r\n        return PaymentType.Draft;\r\n    }\r\n\r\n    setEndingDraftNumber() {\r\n        this.stopPayment.DraftStopPayment.EndingDraftNumber = this.stopPayment.DraftStopPayment.BeginningDraftNumber;\r\n    }\r\n\r\n    isEndingDraftNumberValid() {\r\n        if (this.stopPayment.StopPaymentType == PaymentType.ACH) {\r\n            return true;\r\n        }\r\n        if (this.stopPayment.DraftStopPayment.EndingDraftNumber < this.stopPayment.DraftStopPayment.BeginningDraftNumber) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isEndingAmountValueValid() {\r\n        if (this.stopPayment.StopPaymentType == PaymentType.Draft) {\r\n            return true;\r\n        }\r\n        if (this.stopPayment.ACHStopPayment.ToAmount > 0 && this.stopPayment.ACHStopPayment.ToAmount < this.stopPayment.ACHStopPayment.FromAmount) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    displayPaymentTypeSubsection() {\r\n        if (this.stopPayment.StopPaymentId == undefined) {\r\n            this.getFeeAmount();\r\n        }\r\n\r\n        this.calculateExpirationDate();\r\n        if (+this.stopPayment.StopPaymentType === +PaymentType.ACH) {\r\n            this.isAchVisible = true;\r\n            this.isDraftVisible = false;\r\n        }\r\n        if (+this.stopPayment.StopPaymentType === +PaymentType.Draft) {\r\n            this.isAchVisible = false;\r\n            this.isDraftVisible = true;\r\n        }\r\n    }\r\n\r\n    calculateExpirationDate() {\r\n        this.stopPayment.ExpirationDate = moment().add(1, 'year').toDate();\r\n    }\r\n\r\n    confirm() {\r\n        let list = this.accounts.filter(x => x.AccountId === this.stopPayment.Account.AccountId);\r\n        if (list && list.length > 0) {\r\n            this.stopPayment.Account = list[0];\r\n        }\r\n\r\n        this.paymentDataService.updateStopPayment(this.stopPayment).subscribe((ret: boolean) => {\r\n            this.result = true;\r\n            this.growler.growlSuccess(\"Success\", \"Stop Payment saved\");\r\n            this.close();\r\n        },\r\n            (err: any) => {\r\n                this.growler.growlError(\"Error\", \"Error getting accounts: \" + err);\r\n            });\r\n    }\r\n\r\n    clear(confirmForm: NgForm) {\r\n        this.initializeObjects();\r\n        this.isDraftVisible = false;\r\n        this.isAchVisible = false;\r\n        confirmForm.reset();\r\n    }\r\n\r\n    cancel() {\r\n        this.result = false;\r\n        this.close();\r\n    }\r\n\r\n    populateSelectedAccount(): any {\r\n        let accountList = this.accounts.filter(x => x.AccountId === this.stopPayment.Account.AccountId);\r\n        if (accountList && accountList.length > 0) {\r\n            this.stopPayment.Account = accountList[0];\r\n        }\r\n    }\r\n\r\n    getFeeAmount() {\r\n        this.paymentDataService.getFeeAmount(this.stopPayment.StopPaymentType).subscribe((ret: number) => {\r\n            this.feeAmount = ret;\r\n            this.isFeeVisible = true;\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/payments/stop-payments/stop-payments-modal/stop-payments-modal.component.ts","import { DateFormatPipe } from './../../shared/pipes/date-format.pipe';\r\nimport { StopPaymentModalComponent } from './stop-payments-modal/stop-payments-modal.component';\r\nimport { PaymentDataService } from './../../core/services/payment/payment-data.service';\r\nimport { Account } from './../../shared/models/account.model';\r\nimport { AccountsDataService } from './../../core/services/accounts-data.service';\r\nimport { StopPayment } from './../../shared/models/payments/stop-payment.model';\r\n\r\nimport { GrowlerMediatorService } from './../../core/services/mediators/growler-mediator.service';\r\nimport { DialogService } from 'ng2-bootstrap-modal';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ConfirmModalComponent } from './../../shared/modals/confirm-modal/confirm-modal.component';\r\n\r\nimport * as moment from 'moment';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { PaymentType } from '../../shared/models/payments/payment-type';\r\n\r\n@Component({\r\n    selector: 'app-stop-payments',\r\n    template: require('./stop-payments.component.html'),\r\n    styles: [require('./stop-payments.component.css')]\r\n})\r\nexport class StopPaymentsComponent implements OnInit {\r\n    public customerId: number;\r\n    public stopPaymentsList: StopPayment[];\r\n    private sub: any;\r\n    accounts: Account[];\r\n    public isRegionalCustomer: boolean = true;\r\n    selectedStopPayment: StopPayment;\r\n\r\n    constructor(public router: Router,\r\n        private accountService: AccountsDataService,\r\n        private route: ActivatedRoute,\r\n        public dialogService: DialogService,\r\n        public growler: GrowlerMediatorService,\r\n        private paymentDataService: PaymentDataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getRouteParams();\r\n        this.initializeStopPayments();\r\n    };\r\n\r\n    initializeStopPayments() {\r\n\r\n    }\r\n\r\n    delete(item: StopPayment) {\r\n        this.selectedStopPayment = Object.assign({}, item);\r\n\r\n        this.dialogService.addDialog(ConfirmModalComponent, {\r\n            title: 'Delete Confirmation',\r\n            message: 'Are you sure you want to delete this Stop Payment?',\r\n            confirmText: 'Yes',\r\n            cancelText: 'No'\r\n        }).subscribe((isConfirmed) => {\r\n            if (isConfirmed) {\r\n                this.deleteSelectedPayment(item.StopPaymentId, item.StopPaymentType);\r\n            }\r\n\r\n            this.selectedStopPayment = undefined;\r\n        });\r\n    }\r\n\r\n    public getDynamicAutoId(name: string, id: string) {\r\n        return name + id;\r\n    }\r\n\r\n    getRouteParams() {\r\n        this.sub = this.route.params.subscribe((params) => {\r\n            this.customerId = +params['customerId'];\r\n            if (this.customerId !== 0) {\r\n                this.getAccounts(this.customerId);\r\n                this.getStopPayment(this.customerId);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAccounts(Id: number) {\r\n        this.accountService.getAccounts(Id)\r\n            .subscribe((ret: Account[]) => {\r\n                if (ret && ret.length > 0) {\r\n                    this.accounts = ret;\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.growler.growlError(\"Error\", \"Error getting accounts: \" + err);\r\n            });\r\n    }\r\n\r\n    getStopPayment(Id: number) {\r\n        this.paymentDataService.getStopPayment(Id)\r\n            .subscribe((ret: StopPayment[]) => {\r\n                if (ret && ret.length > 0) {\r\n                    this.stopPaymentsList = ret;\r\n                    this.applyPipes();\r\n                    this.checkIfCustomerIsRegional();\r\n                }\r\n                else {\r\n                    this.stopPaymentsList = new Array<StopPayment>();\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.growler.growlError(\"Error\", \"Error getting accounts: \" + err);\r\n            });\r\n    }\r\n\r\n    checkIfCustomerIsRegional() {\r\n        if (this.stopPaymentsList[0].IsRegionalAccount === false) {\r\n            this.isRegionalCustomer = false;\r\n\r\n            this.dialogService.addDialog(ConfirmModalComponent, {\r\n                title: 'Invalid Region',\r\n                message: 'This account is outside of your region. You can only place Stop Payments on accounts in your region.',\r\n                confirmText: 'OK'\r\n            });\r\n        }\r\n    }\r\n\r\n    applyPipes() {\r\n        let pipe = new DateFormatPipe();\r\n\r\n        if (this.stopPaymentsList && this.stopPaymentsList.length > 0) {\r\n            var i: number;\r\n            for (i = 0; i < this.stopPaymentsList.length; i++) {\r\n                this.stopPaymentsList[i].ExpirationDateDisplay = pipe.transform(this.stopPaymentsList[i].ExpirationDate.toString(), \"MM/DD/YYYY\");\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteSelectedPayment(stopPaymentId: number, stopPaymentTypeId: number) {\r\n        this.paymentDataService.deleteStopPayment(stopPaymentId, stopPaymentTypeId).subscribe((ret: boolean) => {\r\n            if (ret) {\r\n                this.getStopPayment(this.customerId);\r\n                this.growler.growlSuccess(\"Success\", \"Stop Payment has been successfully deleted\");\r\n            }\r\n        },\r\n            (err: any) => {\r\n                this.growler.growlError(\"Error\", \"Error deleting record.\");\r\n            });\r\n    }\r\n\r\n    editPayment(item: StopPayment) {\r\n        var stopPaymentCopy = Object.assign({}, item);\r\n        this.selectedStopPayment = Object.assign({}, item);\r\n\r\n        this.dialogService.addDialog(StopPaymentModalComponent,\r\n            {\r\n                title: 'Edit Stop Payment',\r\n                message: '',\r\n                confirmText: '',\r\n                cancelText: '',\r\n                stopPayment: stopPaymentCopy,\r\n                customerId: this.customerId,\r\n                accounts: this.accounts\r\n            }).subscribe((isConfirmed) => {\r\n                if (isConfirmed) {\r\n                    this.getStopPayment(this.customerId);\r\n                }\r\n\r\n                this.selectedStopPayment = undefined;\r\n        });\r\n    }\r\n\r\n    addNew() {\r\n        this.dialogService.addDialog(StopPaymentModalComponent,\r\n            {\r\n                title: 'Add Stop Payment',\r\n                message: '',\r\n                confirmText: '',\r\n                cancelText: '',\r\n                stopPayment: undefined,\r\n                customerId: this.customerId,\r\n                accounts: this.accounts\r\n            }).subscribe((isConfirmed) => {\r\n                this.getStopPayment(this.customerId);\r\n            });\r\n    }\r\n\r\n    isAch(item: StopPayment) {\r\n        if (item != undefined) {\r\n            return item.StopPaymentType == PaymentType.ACH;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDraft(item: StopPayment) {\r\n        if (item != undefined) {\r\n            return item.StopPaymentType == PaymentType.Draft;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    pipeRow(item: StopPayment) {\r\n\r\n        if (item.StopPaymentType == PaymentType.ACH) {\r\n            if (item.ACHStopPayment.DisplayToAmount !== null) {\r\n                return item.ACHStopPayment.DisplayFromAmount + ' - '\r\n                    + item.ACHStopPayment.DisplayToAmount;\r\n            }\r\n            return item.ACHStopPayment.DisplayFromAmount;\r\n        }\r\n        return '';\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/payments/stop-payments/stop-payments.component.ts","export enum PaymentType {\r\n    ACH = 1,\r\n    Draft = 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/shared/models/payments/payment-type.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {StopPaymentsComponent} from \"./stop-payments/stop-payments.component\";\r\nimport { CustomerCanActivateGuard } from \"../core/navbar/customer-can-activate.guard\";\r\n\r\nconst routes: Routes = [\r\n    // tslint:disable-next-line:max-line-length\r\n    { path: 'stoppayments', component: StopPaymentsComponent}\r\n];\r\n\r\n\r\nexport const appRoutingProviders: any[] = [\r\n\r\n];\r\n\r\nexport const stopPaymentsRouting = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/payments/stop-payments-routing.ts","export class ACHStopPayment {\r\n    CompanyName: string;\r\n    FromAmount: number;\r\n    ToAmount: number;\r\n    DisplayFromAmount: string;\r\n    DisplayToAmount: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/shared/models/payments/ach-stop-payment.model.ts","export class DraftStopPayment {\r\n    BeginningDraftNumber?: number;\r\n    EndingDraftNumber?: number;\r\n    Amount?: number;\r\n    DisplayAmount: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/shared/models/payments/draft-stop-payment.model.ts","import { DraftStopPayment } from './draft-stop-payment.model';\r\nimport { ACHStopPayment } from './ach-stop-payment.model';\r\nimport { Account } from './../account.model';\r\nimport { AuditInfo } from './../audit-info';\r\nimport { PaymentType } from './payment-type';\r\n\r\nexport class StopPayment {\r\n    StopPaymentId: number;\r\n    Account: Account;\r\n    ACHStopPayment: ACHStopPayment;\r\n    DraftStopPayment: DraftStopPayment;\r\n    IsRegionalAccount: boolean;\r\n    StopPaymentType: PaymentType;\r\n    StopPaymentTypeDisplay: string;\r\n    Description: string;\r\n    ExpirationDate: Date;\r\n    ExpirationDateDisplay: string;\r\n    AuditInfo: AuditInfo;\r\n    CustomerId: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-router-loader/src!./src/app/shared/models/payments/stop-payment.model.ts","module.exports = \"<div class=\\\"large-modal-dialog\\\">\\r\\n    <form (ngSubmit)=\\\"confirm()\\\" class=\\\"form-horizontal\\\" #stopPaymentModal=\\\"ngForm\\\">\\r\\n        <div class=\\\"ta-modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h3 class=\\\"modal-title\\\">Stop Payment</h3>\\r\\n                <button data-auto-id=\\\"stop-payment_modal_close_button\\\" type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">&times;</button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body ModalText\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"account\\\" class=\\\"form-control-label form-control-label-sm\\\">Account Number</label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <select data-auto-id=\\\"stoppayment_account_dropdown\\\" class=\\\"form-control form-control-label-sm\\\" required name=\\\"account\\\" id=\\\"account\\\"\\r\\n                                        [(ngModel)]=\\\"stopPayment.Account\\\" #account=\\\"ngModel\\\" placeholder>\\r\\n                                    <option disabled [selected] [value]=\\\"defaultDropDownValue\\\">Select an Account Number...</option>\\r\\n                                    <option *ngFor=\\\"let account of accounts\\\" [ngValue]=\\\"account\\\">{{account.AccountNumber}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"account.pristine || account.valid || stopPayment.Account.AccountId > 0\\\">Account Number is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"paymenttype\\\" class=\\\"form-control-label form-control-label-sm\\\">Stop Payment Type</label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <select data-auto-id=\\\"stoppayment_stoppaymenttype_dropdown\\\" class=\\\"form-control form-control-label-sm\\\" (change)=\\\"displayPaymentTypeSubsection()\\\"\\r\\n                                        #paymenttype=\\\"ngModel\\\" required name=\\\"paymenttype\\\" id=\\\"paymenttype\\\" [(ngModel)]=\\\"stopPayment.StopPaymentType\\\">\\r\\n                                    <option selected disabled>Select a Payment Type...</option>\\r\\n                                    <option value=\\\"{{getAchStopPayment()}}\\\">ACH</option>\\r\\n                                    <option value=\\\"{{getDraftStopPayment()}}\\\">Draft</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"alert alert-danger\\\" [hidden]=\\\"paymenttype.pristine || paymenttype.valid || stopPayment.StopPaymentType > 0\\\">Stop Payment Type is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"isDraftVisible\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"beginningdraftnumber\\\" class=\\\"form-control-label form-control-label-sm\\\">Beginning Draft Number</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input data-auto-id=\\\"stoppayment_input_beginningdraft\\\" class=\\\"form-control form-control-label-sm\\\" type=\\\"number\\\" name=\\\"beginningdraftnumnber\\\"\\r\\n                                           id=\\\"beginningdraftnumber\\\" [(ngModel)]=\\\"stopPayment.DraftStopPayment.BeginningDraftNumber\\\"\\r\\n                                           (change)=\\\"setEndingDraftNumber()\\\" #beginningdraftnumber=\\\"ngModel\\\" required />\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"beginningdraftnumber.pristine || beginningdraftnumber.valid || stopPayment.DraftStopPayment.BeginningDraftNumber > 0\\\">Beginning Draft Number is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"endingdraftnumber\\\" class=\\\"form-control-label form-control-label-sm\\\">Ending Draft Number</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input data-auto-id=\\\"stoppayment_input_endingdraft\\\" class=\\\"form-control form-control-label-sm\\\" type=\\\"number\\\" name=\\\"endingdraftnumber\\\"\\r\\n                                           id=\\\"endingdraftnumber\\\" [(ngModel)]=\\\"stopPayment.DraftStopPayment.EndingDraftNumber\\\"\\r\\n                                           #endingdraftnumber=\\\"ngModel\\\" required />\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"endingdraftnumber.pristine || endingdraftnumber.valid\\\">Ending Draft Number is required</div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"isEndingDraftNumberValid()\\\">Ending Draft Number must be greater than or equal to Beginning Draft Number</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"amount\\\" class=\\\"form-control-label form-control-label-sm\\\">Amount</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input currencyMask [options]=\\\"{ align: 'left', prefix: '$ ', thousands: ',', decimal: '.', precision: '2' }\\\" class=\\\"form-control form-control-label-sm\\\"\\r\\n                                           data-auto-id=\\\"stoppayment_input_amount\\\" name=\\\"amount\\\" id=\\\"amount\\\" [(ngModel)]=\\\"stopPayment.DraftStopPayment.Amount\\\"\\r\\n                                           #amount=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"isAchVisible\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"companyname\\\" class=\\\"form-control-label form-control-label-sm\\\">Company Name</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input data-auto-id=\\\"stoppayment_input_companyname\\\" class=\\\"form-control form-control-label-sm\\\" type=\\\"string\\\" name=\\\"companyname\\\"\\r\\n                                           id=\\\"companyname\\\" [(ngModel)]=\\\"stopPayment.ACHStopPayment.CompanyName\\\" #companyname=\\\"ngModel\\\"\\r\\n                                           required />\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"companyname.pristine || companyname.valid\\\">Company Name is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"amount\\\" class=\\\"form-control-label form-control-label-sm\\\">From Amount</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input currencyMask [options]=\\\"{ align: 'left', prefix: '$ ', thousands: ',', decimal: '.', precision: '2' }\\\" class=\\\"form-control form-control-label-sm\\\"\\r\\n                                           data-auto-id=\\\"stoppayment_input_from_amount\\\" name=\\\"fromamount\\\" id=\\\"fromamount\\\" [(ngModel)]=\\\"stopPayment.ACHStopPayment.FromAmount\\\"\\r\\n                                           #fromamount=\\\"ngModel\\\" required />\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"fromamount.pristine || fromamount.valid\\\">From Amount is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"amount\\\" class=\\\"form-control-label form-control-label-sm\\\">To Amount</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input currencyMask [options]=\\\"{ align: 'left', prefix: '$ ', thousands: ',', decimal: '.', precision: '2' }\\\" class=\\\"form-control form-control-label-sm\\\"\\r\\n                                           data-auto-id=\\\"stoppayment_input_to_amount\\\" name=\\\"toamount\\\" id=\\\"toamount\\\" [(ngModel)]=\\\"stopPayment.ACHStopPayment.ToAmount\\\"\\r\\n                                           #toamount=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"isEndingAmountValueValid()\\\">Ending Amount must be greater than or equal to Beginning Amount</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"isAchVisible || isDraftVisible\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-control-label form-control-label-sm\\\">Expiration Date</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input data-auto-id=\\\"stoppayment_input_expirationdate\\\" class=\\\"form-control form-control-label-sm\\\" type=\\\"string\\\" name=\\\"expirationdate\\\"\\r\\n                                           id=\\\"expirationdate\\\" value=\\\"{{stopPayment.ExpirationDate | dateformat: 'MM/DD/YYYY'}}\\\"\\r\\n                                           disabled />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-control-label form-control-label-sm\\\">Description</label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <input data-auto-id=\\\"stoppayment_input_description\\\" class=\\\"form-control form-control-sm\\\" type=\\\"string\\\" maxlength=\\\"80\\\" name=\\\"description\\\"\\r\\n                                           id=\\\"description\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"stopPayment.Description\\\" />\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <div class=\\\"form-group pull-right\\\">\\r\\n                                <button data-auto-id=\\\"stoppayment_button_confirm_stop_payment\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"stopPaymentModal.pristine || !stopPaymentModal.valid || !isEndingDraftNumberValid() || !isEndingAmountValueValid()\\\"\\r\\n                                        (click)=\\\"confirm()\\\">\\r\\n                                    Save\\r\\n                                </button> &nbsp;\\r\\n                                <button data-auto-id=\\\"stoppayment_button_clear_stop_payment\\\" (click)=\\\"clear(stopPaymentModal)\\\" type=\\\"button\\\" class=\\\"btn\\\">Clear</button>&nbsp;\\r\\n                                <button data-auto-id=\\\"stoppayment_button_cancel_stop_payment\\\" (click)=\\\"cancel()\\\" type=\\\"button\\\" class=\\\"btn\\\">Cancel</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"isFeeVisible\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <label class=\\\"form-control-label form-control-label-sm\\\" style=\\\"color: coral\\\">Upon Save, please note, this loan will be charged a ${{feeAmount}} fee.</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/payments/stop-payments/stop-payments-modal/stop-payments-modal.component.html\n// module id = 1211\n// module chunks = 6","module.exports = \"<form (ngSubmit)=\\\"submit()\\\" class=\\\"form-horizontal\\\" #stopPaymentForm=\\\"ngForm\\\">\\r\\n    <h2>Stop Payment</h2>\\r\\n    <div class=\\\"ta-container\\\">\\r\\n        <div class=\\\"btn-group pull-right separator-bottom\\\" *ngIf=\\\"isRegionalCustomer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"ta-primary-button btn-sm\\\" (click)=\\\"addNew()\\\" [disabled]=\\\"isRegionalCustomer === false\\\" data-auto-id=\\\"stop-payment-manager-add-new\\\">\\r\\n                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    Add New\\r\\n                </button>\\r\\n        </div>\\r\\n\\r\\n        <p-dataTable data-auto-id=\\\"stop_payments_grid\\\" id=\\\"test\\\" [value]=\\\"stopPaymentsList\\\" [(selection)] =\\\"selectedStopPayment\\\" selectionMode=\\\"single\\\" dataKey=\\\"StopPaymentId\\\" sortField=\\\"Account.AccountNumber\\\" sortOrder=\\\"1\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\" #dt>\\r\\n            <p-column field=\\\"StopPaymentTypeDisplay\\\" header=\\\"Stop Payment Type\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"Account.AccountNumber\\\" header=\\\"Account Number\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"Account.Purpose\\\" header=\\\"Type\\\" [filter]=\\\"false\\\" [sortable]=\\\"true\\\" sortOrder=\\\"1\\\" filterMatchMode=\\\"in\\\" [style]=\\\"{'overflow':'visible'}\\\"\\r\\n                      data-auto-id='account-type'>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"DraftStopPayment.BeginningDraftNumber\\\" header=\\\"Beginning Draft Number\\\" [style]=\\\"{'overflow':'visible'}\\\"\\r\\n                [sortable]=\\\"true\\\">\\r\\n                <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                    <div *ngIf=\\\"isDraft(item)\\\">\\r\\n                        {{item.DraftStopPayment.BeginningDraftNumber}}\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"DraftStopPayment.EndingDraftNumber\\\" header=\\\"Ending Draft Number\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\">\\r\\n                <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                    <div *ngIf=\\\"isDraft(item)\\\">\\r\\n                        {{item.DraftStopPayment.EndingDraftNumber}}\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"DraftStopPayment?.Amount\\\" header=\\\"Draft Amount\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\">\\r\\n                <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                    <div *ngIf=\\\"isDraft(item)\\\">\\r\\n                        {{item.DraftStopPayment.Amount | currency:'USD':true }}\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"ACHStopPayment.CompanyName\\\" header=\\\"Company Name\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\">\\r\\n                <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                    <div *ngIf=\\\"isAch(item)\\\">\\r\\n                        {{item.ACHStopPayment?.CompanyName}}\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"ACHStopPayment?.FromAmount\\\" header=\\\"ACH Amount\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\">\\r\\n                <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                    <span *ngIf=\\\"isAch(item)\\\">\\r\\n                        {{item.ACHStopPayment?.FromAmount | currency:'USD':true }}\\r\\n                    </span>\\r\\n                    <span *ngIf=\\\"item.ACHStopPayment?.ToAmount > 0\\\">\\r\\n                        - {{item.ACHStopPayment?.ToAmount | currency:'USD':true }}\\r\\n                    </span>\\r\\n                </ng-template>\\r\\n            </p-column>\\r\\n            <p-column field=\\\"Description\\\" header=\\\"Description\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"ExpirationDateDisplay\\\" header=\\\"Expiration Date\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <p-column field=\\\"AuditInfo.CreatedBy\\\" header=\\\"User Name\\\" [style]=\\\"{'overflow':'visible'}\\\" [sortable]=\\\"true\\\"></p-column>\\r\\n            <div *ngIf=\\\"isRegionalCustomer\\\">\\r\\n                <p-column [style]=\\\"{'overflow':'visible'}\\\">\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-item=\\\"rowData\\\">\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary dropdown-toggle btn-sm \\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n                                aria-expanded=\\\"false\\\">\\r\\n                            <i class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                            <div class=\\\"ta-primary-dropdown-menu\\\">\\r\\n                                <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"editPayment(item)\\\" [attr.data-auto-id]=\\\"getDynamicAutoId('stop-payment-edit-')\\\">Edit Stop Payment</a>\\r\\n                                <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"delete(item)\\\" [attr.data-auto-id]=\\\"getDynamicAutoId('stop-payment-delete-')\\\">Delete Stop Payment</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </p-column>\\r\\n            </div>\\r\\n        </p-dataTable>\\r\\n    </div>\\r\\n</form>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/payments/stop-payments/stop-payments.component.html\n// module id = 1212\n// module chunks = 6","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/payments/stop-payments/stop-payments.component.css\n// module id = 1237\n// module chunks = 6"],"sourceRoot":""}